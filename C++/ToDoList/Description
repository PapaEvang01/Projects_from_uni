✅ **To-Do List (Terminal C Project)**
This was probably the most challenging of my C mini-projects — a full-featured task manager that runs entirely in the terminal.

It lets you:

* ✍️ Add tasks with a **description**, **priority**, **deadline**, and **category**
* ✅ Mark tasks as **completed**
* 📅 Automatically **sort by deadline**
* 🔍 **Filter** tasks by category (Work, Study, Personal, Other)
* 💾 Save/load data from a local file
* 🎨 Uses **color-coded output** for easy readability

It even calculates how many days are left until each task is due — or marks it as **Overdue** if the deadline has passed.

📌 **What I learned**

* Real-world use of **structs** and arrays in C
* **Deadline parsing** and date comparisons using `time.h`
* **File I/O** for saving/loading task data
* Building a **user-friendly CLI** with colors and menus
* Sorting with `qsort()` and filtering user data dynamically

🛠️ Built in pure C using the terminal and a lot of `printf()` magic.

This project pushed me to think beyond simple loops and conditions.
It made me realize that even basic C programs can feel polished and useful — if you take the time to design them right.
